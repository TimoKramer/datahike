version: 2.1

orbs:
  tools: replikativ/clj-tools@0

jobs:
  build:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: clean
          command: clojure -Sthreads 1 -T:build clean
      - run:
          name: jar
          command: clojure -Sthreads 1 -T:build jar
  deploy:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - add_ssh_keys:
          fingerprints:
            - "ba:37:bf:3e:12:f2:d6:43:c7:a2:ec:81:b7:2e:09:61"
      - run:
          name: tag
          command: clojure -Sthreads 1 -T:build tag
      - run:
          name: deploy
          command: clojure -Sthreads 1 -T:build deploy
  setup:
    executor: tools/clojurecli
    parameters:
      setup_cljs:
        type: boolean
        default: true
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run: clojure -P
      - run: clojure -Sthreads 1 -T:build compile
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - when:
          condition: <<parameters.setup_cljs>>
          steps:
            - restore_cache:
                keys:
                  - npm-{{ checksum "package-lock.json" }}
                  - npm-
            - run: npm ci
            - save_cache:
                key: npm-{{ checksum "package-lock.json" }}
                paths:
                  - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ

workflows:
  build-test-and-deploy:
    jobs:
      - setup:
          context: dockerhub-deploy
          setup_cljs: false
      - build:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/format:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/unittest:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/backward-compatibility-test:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/integrationtest-postgresql:
          context: dockerhub-deploy
          requires:
            - setup
      - deploy:
          context:
            - dockerhub-deploy
            - clojars-deploy
          filters:
            branches:
              only: switch-to-tools-build
          requires:
            - setup
            - build
            - tools/format
            - tools/unittest
            - tools/backward-compatibility-test
            - tools/integrationtest-postgresql
